# Multi-stage build Dockerfile (alternative)
# This version builds the application inside Docker
# Use this if you prefer a fully containerized build process

# Build stage
FROM eclipse-temurin:17-jdk-jammy AS build

WORKDIR /build

# Install dependencies and update CA certificates
RUN apt-get update && \
    apt-get install -y ca-certificates && \
    update-ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Copy gradle wrapper and project files first for better layer caching
COPY gradle gradle/
COPY gradlew gradlew.bat build.gradle.kts settings.gradle.kts ./

# Make gradlew executable
RUN chmod +x gradlew

# Copy source code
COPY shared shared/
COPY server server/

# Build the application
ENV GRADLE_OPTS="-Dorg.gradle.daemon=false"
RUN ./gradlew server:installDist --no-daemon

# Runtime stage
FROM eclipse-temurin:17-jre-jammy

WORKDIR /app

# Install curl (used by health checks) and optional psql client
RUN apt-get update \
    && apt-get install -y --no-install-recommends curl postgresql-client ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy the application distribution from build stage
COPY --from=build /build/server/build/install/server /app

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

EXPOSE 8080

CMD ["./bin/server"]